Konsept: Bu blockchain, belirli bir mahalle veya şehirdeki yerel işletmeleri (restoranlar, kafeler, butikler, sanat atölyeleri vb.) desteklemek ve bu işletmelerle etkileşim kuran kullanıcıları ödüllendirmek için tasarlanmış bir sadakat ve keşif platformu olacak.

Neden Bu Amaç?

Anlaşılır ve Gerçekçi: Karmaşık finansal sistemler yerine, herkesin aşina olduğu bir konsept (sadakat programı, mekan keşfi) üzerine kurulu.

Ölçeklenebilir: Önce sadece birkaç arkadaşınızla kendi favori mekanlarınızı kaydetmek için başlayabilir, sonra tüm mahalleyi kapsayacak şekilde genişletebilirsiniz.

Temel Kavramları Öğretir: Kendi dijital varlığımızı (token) yaratma, işlemler (transaction) yapma ve veriyi (mekan yorumları) bloklara kaydetme gibi temel blockchain prensiplerini uygulamalı olarak görmemizi sağlar.


Yerel Keşif Zinciri: Temel Bilgiler ve Çalışma MantığıMerhaba arkadaşlar! Bugün üzerinde çalıştığımız bu projenin (Yerel Keşif Zinciri) tam olarak ne olduğunu, nasıl çalıştığını ve neden bu kadar önemli olduğunu konuşacağız.1. Temel Konsept: Neden Blok Zinciri Kullanıyoruz?Blok Zinciri Nedir?Basitçe söylemek gerekirse, blok zinciri bir kayıt defteridir. Ama bu defter sıradan bir defter değil:Sıradan Defter: Bir kişi (merkez) tutar ve istediği zaman silebilir, değiştirebilir. (Banka gibi.)Blok Zinciri Defteri: Birden fazla kişi (düğüm) aynı anda tutar. Bir sayfa (blok) yazılıp mühürlendi mi, kimse onu değiştiremez veya silemez. Herkesin kopyası aynıdır. Bu, güven ve şeffaflık sağlar.Bizim Amacımız: Keşif ve yorum verilerini merkezsiz, değiştirilemez ve güvenilir bir şekilde kaydetmek.2. Sistemin Üç Ana ParçasıSistemimiz üç temel bölümden oluşur:BölümNe Yapar?Neden Önemli?Blok (Sayfa)Yorumları ve puan transferlerini (işlemleri) kaydeder.Veri birimimizdir. İçindeki her şey mühürlenir.Zincir (Defter)Blokları kronolojik ve şifreli bir şekilde birbirine bağlar.Kayıtların sırasını ve değiştirilemezliğini garanti eder.Ağ (Ekip)Blok zincirini kopyalayan ve doğrulayan bilgisayarlar (düğümler).Güvenlik, merkezsizlik ve süreklilik sağlar.3. Blok Zincirinin Kalbi: Madencilik ve Mühürleme (Proof of Work)Bir blok, defterdeki bir sayfa gibidir. Bu sayfayı tamamlayıp deftere eklemek için yapılan işleme Madencilik diyoruz.A. İşlemler (Bekleyen Veriler)Siz bir yorum eklediğinizde (/add_comment) veya puan transferi yaptığınızda, bu veri hemen zincire eklenmez.Bu veri, madencilerin alıp işleyeceği, bekleyen işlemlerin olduğu bir Kuyruğa girer.B. Madencilik (Sayfayı Doldurma)Otomatik Madenci (Arka planda çalışan Python thread'i), kuyrukta işlem görünce veya her 60 saniyede bir, yeni bir blok oluşturmaya karar verir.Bu yeni bloğa, bekleyen tüm işlemleri (yorumları) ve kendine ait 1 Puanlık Ödülü koyar.C. Mühürleme (Proof of Work / İş Kanıtı)Madenci, bu yeni bloğun "mühürlenmeye" hazır olduğunu kanıtlamak zorundadır. Bu kanıt işlemine Proof of Work (İş Kanıtı) diyoruz.Bu, madencinin karmaşık bir matematiksel bilmeceyi çözmesi anlamına gelir. (Örn: Hangi sayıyı eklersen, bloğun şifresinin ilk dört hanesi 0000 ile başlar?)Bu bilmeceyi çözmek için gereken sayıya Proof (Kanıt) denir.D. Zincire EklemeMadenci doğru Proof'u bulduğunda, bloğu oluşturur, zincirine ekler ve SocketIO kullanarak anında ağdaki diğer kullanıcılara "Yeni bir blok buldum!" diye bağırır.4. Güven ve Merkezsizlik: Ağ ve SenkronizasyonSistemimizin en kritik özelliği, herkesin aynı doğru deftere sahip olmasıdır.A. Düğümler (Nodes)Sistemi çalıştıran her bilgisayara Düğüm denir.Her düğümün blok zincirinin kendi kopyası vardır (blockchain_data.json).Düğümler, birbirlerinin web adreslerini bilirler (/connect_node).B. Senkronizasyon (Mutabakat)Birisi yeni bir blok kazdığında, diğer tüm düğümler zincirlerini kontrol eder (/replace_chain):"Benim zincirim mi daha uzun, yoksa ağdaki diğer zincirler mi?"Eğer ağdaki zincirlerden biri daha uzunsa VE o zincir geçerliyse (yani bloklar doğru mühürlenmişse), düğüm kendi kısa zincirini atar ve en uzun geçerli zinciri kopyalar.Buna Mutabakat (Consensus) denir. Bu sayede, kötü niyetli bir kişinin sahte bir blok eklemesi engellenir, çünkü diğer dürüst düğümlerin zincirleri her zaman daha uzun ve doğrudur.5. Anlık Güncelleme: SocketIOBu özellik, kullanıcı arayüzü (index.html) için gereklidir.SocketIO Nedir? İstemci (tarayıcı) ve sunucu arasında kurulan sürekli bir telefon hattı gibi düşünün.Nasıl Çalışır?Tarayıcı açıldığında, sunucuya SocketIO ile bağlanır.Arka plandaki madenci yeni bir blok kazdığında, normal HTTP isteği göndermek yerine, bu telefon hattını kullanarak tarayıcıya anında "Yeni Blok Var!" mesajını gönderir (socketio.emit).Tarayıcı bu mesajı alınca, otomatik olarak API'yi çağırır (/get_chain) ve ekrandaki zinciri günceller.Sonuç: Veri kaydı (yorum veya transfer) kuyruğa girer, otomatik madenci bekler, blok kazılır, ağ senkronize olur ve ekrandaki zinciriniz anında güncellenir. Bu, Yerel Keşif Zinciri'nin temel döngüsüdür!